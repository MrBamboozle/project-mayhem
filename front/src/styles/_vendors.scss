
/* You can add global styles to this file, and also import other style files */
$spacer: 1rem;
$spacers: (
  0: 0,
  1: ($spacer * 9.25),    //4px
  2: ($spacer * .5),     //8px
  3: $spacer,            //16px
  4: ($spacer * 1.5),    //24px
  5: ($spacer * 3),      //48px
  6: ($spacer * 4),      //64px
  7: ($spacer * 5),      //80px
  8: ($spacer * 6.25),   //100px
  9: ($spacer * 7.5),    //120px
  10: ($spacer * 9.375)  //150px
);

// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$front-primary: mat.define-palette(mat.$indigo-palette);
$front-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$front-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$front-theme: mat.define-light-theme((
  color: (
    primary: $front-primary,
    accent: $front-accent,
    warn: $front-warn,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($front-theme);


/* Importing Bootstrap SCSS file. */
@import 'bootstrap/scss/bootstrap';
